name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run formatting check
      run: npx prettier --check "**/*.{ts,js,json,md}"
      continue-on-error: true
    
    - name: Build
      run: npm run build
    
    - name: Verify build output
      run: |
        echo "Checking build artifacts..."
        test -f dist/nodes/JetNet/JetNet.node.js
        test -f dist/nodes/JetNetTool/JetNetTool.node.js
        test -f dist/credentials/JetNetApi.credentials.js
        echo "✅ All required files present"
    
    - name: Run tests
      run: npm test -- --passWithNoTests --coverage
      
    - name: Upload coverage
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
      continue-on-error: true
    
    - name: Check for security vulnerabilities
      run: npm audit --audit-level=moderate
      continue-on-error: true
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: matrix.node-version == '20.x'
      with:
        name: build-artifacts
        path: dist/
        retention-days: 7

  validate-package:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build package
      run: npm run build
    
    - name: Test npm pack
      run: |
        npm pack --dry-run
        npm pack
        tar -tzf *.tgz | head -20
    
    - name: Validate package.json
      run: |
        npx package-json-validator package.json
        echo "✅ package.json is valid"
      continue-on-error: true
    
    - name: Check license
      run: |
        if [ -f LICENSE ]; then
          echo "✅ LICENSE file exists"
        else
          echo "❌ LICENSE file missing"
          exit 1
        fi