name: Release & Publish

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 0.2.1)'
        required: true
        type: string
      release_type:
        description: 'Release type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: |
        npm run lint
        npm run build
        npm test -- --passWithNoTests
    
    - name: Determine version
      id: version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          if [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION="${{ github.event.inputs.version }}"
            npm version $VERSION --no-git-tag-version
          else
            VERSION=$(npm version ${{ github.event.inputs.release_type }} --no-git-tag-version)
            VERSION=${VERSION#v}
          fi
        else
          VERSION=${GITHUB_REF#refs/tags/v}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag=v$VERSION" >> $GITHUB_OUTPUT
    
    - name: Update package files
      if: github.event_name == 'workflow_dispatch'
      run: |
        # Update version in package.json and package-lock.json
        npm version ${{ steps.version.outputs.version }} --no-git-tag-version --allow-same-version
        
        # Commit version bump
        git add package.json package-lock.json
        git diff --staged --quiet || git commit -m "chore: bump version to ${{ steps.version.outputs.version }}"
    
    - name: Build package
      run: npm run build
    
    - name: Create npm package
      run: |
        npm pack
        tar_file=$(ls *.tgz)
        echo "TAR_FILE=$tar_file" >> $GITHUB_ENV
    
    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Push version commit and tag
      if: github.event_name == 'workflow_dispatch'
      run: |
        git push origin HEAD:main
        git tag -a ${{ steps.version.outputs.tag }} -m "Release ${{ steps.version.outputs.tag }}"
        git push origin ${{ steps.version.outputs.tag }}
    
    - name: Generate changelog
      id: changelog
      run: |
        echo "## Changes in ${{ steps.version.outputs.tag }}" > changelog.md
        echo "" >> changelog.md
        git log --pretty=format:"- %s (%h)" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> changelog.md || echo "- Initial release" >> changelog.md
        echo "" >> changelog.md
        echo "---" >> changelog.md
        echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$(git describe --tags --abbrev=0 HEAD^)...${{ steps.version.outputs.tag }}" >> changelog.md 2>/dev/null || true
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        name: Release ${{ steps.version.outputs.tag }}
        body_path: changelog.md
        files: ${{ env.TAR_FILE }}
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Update n8n Community Nodes
      continue-on-error: true
      run: |
        echo "Package published: @mochila/n8n-nodes-jetnet@${{ steps.version.outputs.version }}"
        echo "Users can install via: npm install @mochila/n8n-nodes-jetnet@${{ steps.version.outputs.version }}"
    
    - name: Comment on Issues
      if: success()
      uses: actions/github-script@v7
      with:
        script: |
          const version = '${{ steps.version.outputs.version }}';
          const issues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: 'pending-release'
          });
          
          for (const issue of issues.data) {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              body: `ðŸŽ‰ This issue has been addressed in release v${version}\n\nInstall: \`npm install @mochila/n8n-nodes-jetnet@${version}\``
            });
          }